on:
  push:
    branches:
      - main

# global variable
env:
  DOCKERHUB_USERNAME: csd4503  # replace this with your dockerhub username
  DOCKERHUB_REPOSITORY: flask  # replace this with your dockerhub repository name
  DOCKERHUB_TEST_REPOSITORY: flask-test  # replace this with your dockerhub repository name
  IMAGE_VERSION: v1.0.0

jobs:
  # Stage 1: Build
  build_job:
    name: Build Docker Image
    runs-on: aws-self-hosted  # self-hosted runner
    environment: development
    steps:
      - name: Clone and checkout to the repository
        uses: actions/checkout@v2  # Clones the repository in the working directory of the runner

      # This action allows us to authenticate with DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Main Flask App Image
        run: docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:$IMAGE_VERSION -f Dockerfile  .

      - name: Push Main Flask Image to DockerHub
        run: docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:$IMAGE_VERSION

      - name: Build Test Flask App Image
        run: |
          mv .dockerignore .dockerignore.temp
          docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_TEST_REPOSITORY:$IMAGE_VERSION -f DockerfileTest  .
          mv .dockerignore.temp .dockerignore

      - name: Push Test Flask Image to DockerHub
        run: docker push $DOCKERHUB_USERNAME/$DOCKERHUB_TEST_REPOSITORY:$IMAGE_VERSION

  test_job:
    name: Testing the Flask Application
    runs-on: aws-self-hosted # self-hosted runner
    needs: [build_job]
    environment: development  # define the environment to access its secrets
    steps:
      # This action allows us to authenticate with DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull Test Flask Image from DockerHub
        run: docker pull $DOCKERHUB_USERNAME/$DOCKERHUB_TEST_REPOSITORY:$IMAGE_VERSION

      - name: Run Test Flask Image
        run: |
           docker run --rm \
             -e MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }} \
             -e MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }} \
             $DOCKERHUB_USERNAME/$DOCKERHUB_TEST_REPOSITORY:$IMAGE_VERSION
              

  # Stage 3: Deploy
  deploy_job:
    name: Deploy the Docker Image
    runs-on: aws-self-hosted  # self-hosted runner
    environment: development  # define the environment to access its secrets
    needs: [build_job, test_job]
    steps:
      # This action allows us to authenticate with DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull Main Flask Image from DockerHub
        run: docker pull $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:$IMAGE_VERSION

      - name: Deploy Main Flask Image
        run: |
          docker rm -f $DOCKERHUB_REPOSITORY || true
          docker run -d -p 5000:5000 \
            --name $DOCKERHUB_REPOSITORY \
            -e MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }} \
            -e MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}  \
            $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:$IMAGE_VERSION